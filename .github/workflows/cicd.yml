name: twoge-cicd 
on: 
  push:
    branches:
      - main # This will trigger the workflow on push events to the main branch
env: # github secrets
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_REGION: ${{ secrets.AWS_REGION}}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo 
        uses: actions/checkout@v2 
        with:
          ref: main # Check out the repo at the latest commit on the main branch

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1  # Set up the Docker buildx builder, a build tool that allows you to build images for multiple platforms

      - name: login to docker hub
        uses: docker/login-action@v1 
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: build and push docker image
        uses: docker/build-push-action@v2 
        with:
          context: twoge/ # The directory containing the Dockerfile
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/twoge_kube:latest
          platforms: linux/amd64,linux/arm64 # Build for multiple platforms (amd64 for Windows/Mac, arm64 for newer Macs)

  eks_deploy:
    needs: build_and_push # This job depends on the build_and_push job
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo 
        uses: actions/checkout@v2
        with:
          ref: main

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # This step grabs the necessary kubeconfig file from the EKS cluster and sets it as an environment variable in order to deploy to the cluster
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name class-eks-cluster --kubeconfig ./kubeconfig.yml
          echo "KUBECONFIG=$(pwd)/kubeconfig.yml" >> $GITHUB_ENV

      - name: deploy to eks 
        run: |
          kubectl apply -f k8s/ -n tristan